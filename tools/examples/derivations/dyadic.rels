-- *******************************************************************
-- Optional Generator (Used in Proofs)
-- *******************************************************************

expand_M M = X0.Z0.X0.Z0


-- *******************************************************************
-- Derived Generators
-- *******************************************************************

-- No dependencies on derived generators.
expand_CZ01 CZ01 = K12.CX01.K12
expand_X1   X1   = CX01.X0.CX01.X0

-- Depends on CZ01
expand_Z0 Z0 = CZ01.CX01.CZ01.CX01

-- Depends on X1.
expand_CX20 CX20 = X1.CCX0.X1.CCX0

-- Depends on CX20.
expand_CX21 CX21 = CX20.CX01.CX20.CX01

-- Depends on CX21
expand_CX12 CX12 = K12.CX21.K12

-- Depends on CX12.
expand_CX02 CX02 = CX12.CX01.CX12.CX01

-- Depends on CX12 and CX21
expand_SWAP12 SWAP12 = CX12.CX21.CX12

-- Depends on CX02.
expand_SWAP02 SWAP02 = CX02.CX20.CX02

-- Depends on SWAP02.
expand_K01 K01 = SWAP02.K12.SWAP02

-- Depends on K01.
expand_CX10 CX10 = K01.CX01.K01

-- Depends on CX10.
expand_SWAP01 SWAP01 = CX01.CX10.CX01

-- Depends on SWAP01.
expand_CCX1 CCX1 = SWAP01.CCX0.SWAP01

-- Depends on SWAP01 and SWAP02.
expand_X2 X2 = SWAP02.X0.SWAP02

-- Depends on Z0, SWAP01 and SWAP02.
expand_Z1 Z1 = K12.X1.K12
expand_Z2 Z2 = SWAP02.Z0.SWAP02

-- Depends on SWAP01 and SWAP02.
expand_CCX2 CCX2 = K12.CCX1.K12

-- Depends on CZ01, SWAP01, and SWAP02.
expand_CZ02 CZ02 = SWAP12.CZ01.SWAP12
expand_CZ12 CZ12 = SWAP01.CZ02.SWAP01


-- *******************************************************************
-- Order Relations
-- *******************************************************************

elim_X0   X0.X0     = ε
elim_CX01 CX01.CX01 = ε
elim_CCX0 CCX0.CCX0 = ε
elim_K01  K01.K01   = ε
elim_K12  K12.K12   = ε


-- *******************************************************************
-- Bifunctoriality rules
-- *******************************************************************

bifunct_X_a    X0.X1   = X1.X0
bifunct_X_CX_a CX12.X0 = X0.CX12
bifunct_X_K_a  X0.K12  = K12.X0


-- *******************************************************************
-- Symmetric Generators
-- *******************************************************************

symmetry_SWAP12 SWAP12 = CZ12.K12.CZ12.K12.CZ12.K12
symmetry_X_a    X1     = SWAP01.X0.SWAP01
symmetry_CX_a   CX20   = SWAP02.CX02.SWAP02
symmetry_CX_c   CX12   = SWAP01.CX02.SWAP01
symmetry_CX_l   CX21   = SWAP01.CX20.SWAP01
symmetry_CX_m   CX02   = SWAP12.CX01.SWAP12
symmetry_CCX_a  CCX2   = SWAP02.CCX0.SWAP02
symmetry_CCX_b  CCX2   = SWAP12.CCX1.SWAP12
symmetry_Z_d    Z1     = SWAP01.Z0.SWAP01
symmetry_K_b    K01    = SWAP01.K01.SWAP01


-- *******************************************************************
-- Commutivity
-- *******************************************************************

-- [r8_c] Can be rewritten in terms of commutation: CXC.CXN = CXN.CXC
r1    CCX0.CX10      = CX10.CCX0
r13   X0.CCX0        = CCX0.X0
r36   X0.CX10.X0     = CX10
r47   K01.K12        = K12.K01
r31_c CZ01.CZ12      = CZ12.CZ01
r8_c  CX01.CCX0.CX01 = CCX1.CCX0.CCX1


-- *******************************************************************
-- Commutators ("Pushing Through")
-- *******************************************************************

r2    K01.Z0         = X0.K01
r5    X0.CCX2        = CCX2.CX12.X0
r10_b CX12.CCX0.CX12 = CCX0.CX10
r44_b CX01.CZ12      = CZ02.CZ12.CX01
r40_a CCX1.CCX2.CCX1 = CCX2.CCX1.CCX2
